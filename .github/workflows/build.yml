name: CMake Build

on: [push, pull_request]

jobs:
  build:
    # Example: runs on Ubuntu, but you can enable a matrix for multiple OSes or compilers if desired.
    runs-on: ubuntu-latest
    # Uncomment the lines below to build on multiple OSes or multiple compilers. 
    # strategy:
    #   fail-fast: false
    #   matrix:
    #     os: [ubuntu-latest, windows-latest]
    #     build_type: [Release, Debug]
    #     c_compiler: [gcc, clang]
    #     include:
    #       - os: ubuntu-latest
    #         c_compiler: gcc
    #       - os: ubuntu-latest
    #         c_compiler: clang
    #       - os: windows-latest
    #         c_compiler: cl

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # (Optional) Cache CMake build directory to speed up incremental builds.
      # If building in 'build', cache that directory:
      - name: Cache build
        uses: actions/cache@v3
        with:
          path: build
          key: ${{ runner.os }}-build-${{ hashFiles('**/CMakeLists.txt') }}
          restore-keys: |
            ${{ runner.os }}-build-

      # This step is optional if you have a modern CMake installed already.
      # If you want to ensure a specific CMake version, you can keep or adjust this:
      - name: Set up CMake
        uses: jwlawson/actions-setup-cmake@v1
        with:
          # For example, specify version if you need a minimum version:
          cmake-version: '3.24.0' 

      - name: Configure CMake
        run: |
          cmake -S . -B build

      - name: Build
        run: |
          cmake --build build

      # (Optional) Run tests if you have a test suite configured with CTest.
      - name: Test
        if: always()
        run: |
          cmake --build build --target test
          # OR
          # cd build && ctest --verbose

      # (Optional) Upload build artifactsâ€”helpful if you want to download built binaries or logs.
      - name: Upload artifacts
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: build-artifacts
          path: build
uses: actions/upload-artifact@v4
  with:
    # Name of the artifact to upload.
    # Optional. Default is 'artifact'
    name:

    # A file, directory or wildcard pattern that describes what to upload
    # Required.
    path:

    # The desired behavior if no files are found using the provided path.
    # Available Options:
    #   warn: Output a warning but do not fail the action
    #   error: Fail the action with an error message
    #   ignore: Do not output any warnings or errors, the action does not fail
    # Optional. Default is 'warn'
    if-no-files-found:

    # Duration after which artifact will expire in days. 0 means using default retention.
    # Minimum 1 day.
    # Maximum 90 days unless changed from the repository settings page.
    # Optional. Defaults to repository settings.
    retention-days:

    # The level of compression for Zlib to be applied to the artifact archive.
    # The value can range from 0 to 9.
    # For large files that are not easily compressed, a value of 0 is recommended for significantly faster uploads.
    # Optional. Default is '6'
    compression-level:

    # If true, an artifact with a matching name will be deleted before a new one is uploaded.
    # If false, the action will fail if an artifact for the given name already exists.
    # Does not fail if the artifact does not exist.
    # Optional. Default is 'false'
    overwrite:

    # Whether to include hidden files in the provided path in the artifact
    # The file contents of any hidden files in the path should be validated before
    # enabled this to avoid uploading sensitive information.
    # Optional. Default is 'false'
    include-hidden-files:

            - name: Download a Build Artifact
  uses: actions/download-artifact@v4.1.8
  with:
    # Name of the artifact to download. If unspecified, all artifacts for the run are downloaded.
    name: # optional
    # Destination path. Supports basic tilde expansion. Defaults to $GITHUB_WORKSPACE
    path: # optional
    # A glob pattern matching the artifacts that should be downloaded. Ignored if name is specified.
    pattern: # optional
    # When multiple artifacts are matched, this changes the behavior of the destination directories. If true, the downloaded artifacts will be in the same directory specified by path. If false, the downloaded artifacts will be extracted into individual named directories within the specified path.
    merge-multiple: # optional, default is false
    # The GitHub token used to authenticate with the GitHub API. This is required when downloading artifacts from a different repository or from a different workflow run. If this is not specified, the action will attempt to download artifacts from the current repository and the current workflow run.
    github-token: # optional
    # The repository owner and the repository name joined together by "/". If github-token is specified, this is the repository that artifacts will be downloaded from.
    repository: # optional, default is ${{ github.repository }}
    # The id of the workflow run where the desired download artifact was uploaded from. If github-token is specified, this is the run that artifacts will be downloaded from.
    run-id: # optional, default is ${{ github.run_id }}
          
